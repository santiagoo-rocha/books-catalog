name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 23
          cache: gradle

      - name: Make Gradle executable (just in case)
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew clean jacocoRootReport bootJar  --no-daemon

      - name: Resolve JAR path
        run: |
          JAR=$(ls -1 infrastructure/build/libs/*.jar | head -n 1)
          echo "JAR_PATH=$JAR" >> $GITHUB_ENV

      - name: Generate coverage badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: build/reports/jacoco/jacocoRootReport/jacocoRootReport.csv
          generate-branches-badge: false
          fail-if-coverage-less-than: 80

      - name: Commit coverage badge to README
        if: success()
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .github/badges/jacoco.svg
            git commit -m "Update JaCoCo coverage badge" || echo "No changes to commit"
            git push

      - name: Stage JAR for Docker build
        run: |
          mkdir -p docker
          cp "${{ env.JAR_PATH }}" docker/app.jar
          echo "STAGED_JAR=docker/app.jar" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            JAR=${{ env.STAGED_JAR }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

